{"version":3,"file":"vue.js","sources":["../../src/observer/array.js","../../src/util.js","../../src/observer/index.js","../../src/state.js","../../src/init.js","../../src/index.js"],"sourcesContent":["import { observe } from \".\";\n\n// 重写数组的方法, 拿到数组原型上的方法(原来的方法)\nlet oldArrayProtoMethods = Array.prototype;\n\n// 继承一下  arrayMethods.__proto__ = oldArrayProtoMethods\nexport let arrayMethods = Object.create(oldArrayProtoMethods);\n\n// 7个改变数组本身状态的方法\nlet methods = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'reverse',\n  'sort',\n  'splice'\n]\n\nmethods.forEach(method => {\n  arrayMethods[method] = function (...args) {\n    // 调用原来的方法\n    const result = oldArrayProtoMethods[method].apply(this, args) // this就是observe里的value\n    let inserted;\n    let ob = this.__ob__;\n    switch (method) {\n      // method中有新增元素的方法，要观测新增的元素，新增的是对象类型，应该再次被劫持\n      case 'push':\n      case 'unshift':  // 这俩个方法都是追加\n        inserted = args;\n        break;\n      case 'splice': // vue.$set的原理\n        // 删除、添加、修改的功能都有，第3个参数才是新增的值\n        inserted = args.slice(2); // arr.splice(0, 1, {a:1}) // 从第0个索引开始删除一个，新增一个对象\n      default:\n        break;\n    }\n    if (inserted) {\n      // 通过ob 把新增的对象也进行代理\n      ob.observeArray(inserted); // 给数组新增的值也要进行观测\n    }\n    return result\n  }\n})","export function proxy(vm, data, key) {\n  Object.defineProperty(vm, key, {\n    get() {\n      return vm[data][key]; // vm._data.a\n    },\n    set(newValue) { // vm.a = 100\n      vm[data][key] = newValue // vm._data.a = 100\n    }\n  })\n}\n\nexport function defineProperty(target, key, value) {\n  Object.defineProperty(target, key, {\n    enumerable: false, // 将此属性定义成不可枚举的,this.walk的时候，不会取到此属性\n    configurable: false, // 此属性不可编辑\n    value: value\n    // 会不停的调用defineReactive，将__ob__变成响应式的，this上有__ob__，会无限递归\n    // value.__ob__ = this //this是Observer实例， 自定义属性递归过程中，回去再去递归它的属性，会无限递归，不呢个这样写\n  })\n}","import { arrayMethods } from \"./array\";\nimport { defineProperty } from \"../util.js\";\nclass Observer {\n  constructor(value) {\n    // 使用defineProperty 重新定义属性,\n    // 判断一个对象是否被观测过，看他有没有 __ob__这个属性(Observer的实例)，__ob__自定义属性，用来描述对象被观测过了\n    // 让其他地方能拿到实例的方法\n    defineProperty(value, '__ob__', this)\n\n\n    if (Array.isArray(value)) {\n      // 判断值是不是数组，希望调用 push shift unshift splice sort reverse pop\n      // 函数劫持、切片编程\n      value.__proto__ = arrayMethods\n      // 观测数组中的对象类型,对象变化也要做一些事\n      this.observeArray(value)\n    } else {\n      this.walk(value)\n    }\n  }\n  // 观测数组中的每一项\n  observeArray(value) {\n    value.forEach(item => {\n      observe(item); // 观测数组中的对象类型\n    })\n  }\n  // 观测对象上的每一项\n  walk(data) {\n    // 循环对象使用defineProperty进行定义\n    let keys = Object.keys(data); // 获取对象的key\n    keys.forEach(key => {\n      // console.log('walk--data', data, 'key', key)\n      defineReactive(data, key, data[key]); // Vue.util.defineReactive: 将数据定义成响应式的数据\n    })\n\n  }\n}\n// 封装 继承\n// observe(newValue) => value=newValue ==> value=observve(newValue)\nfunction defineReactive(data, key, value) {\n  observe(value); // 如果观测的对象的值也是对象，再进行观测\n\n  Object.defineProperty(data, key, {\n    get() {\n      console.log(\"用户获取值\", key, value)\n      return value\n    },\n    set(newValue) {\n      console.log(\"用户设置值\", key, value)\n      if (newValue == value) return;\n      // data[key] = newValue; // 这样写会死循环，利用闭包就好了\n      observe(newValue); // 如果用户将值改为对象，继续监控\n      value = newValue\n    }\n  })\n  // console.log(\"defineReactive\", 'data', data, 'key', key)\n}\n\nexport function observe(data) {\n  // console.log('observe-data', data)\n  // 观测的数据不能不是对象，并且不是null\n  if (typeof data !== 'object' || data === null) {\n    return data;\n  }\n  if (data.__ob__) {\n    // 对象上有__ob__属性，已经被观测过了\n    return data;\n  }\n  return new Observer(data)\n}","import { observe } from \"./observer/index\";\nimport { proxy } from \"./util.js\";\n// 响应式状态初始化\nexport function initState(vm) { // vm.$options\n  // console.log('state.js-->vm', vm)\n  const opts = vm.$options;\n  if (opts.props) {\n    initProps(vm)\n  }\n  if (opts.methods) {\n    initMethods(vm)\n  }\n  if (opts.data) {\n    initData(vm)\n  }\n  if (opts.computed) {\n    initComputed(vm)\n  }\n  if (opts.watch) {\n    initWatch(vm)\n  }\n}\n\nfunction initProps() { }\nfunction initMethods() { }\n\nfunction initData(vm) { // 数据的初始化操作\n  let data = vm.$options.data\n  // vm能达到观测后的data\n  vm._data = data = typeof data == 'function' ? data.call(vm) : data;\n  // console.log('initData--->', data)\n  // 当去vm上取属性时，将属性的取值代理到vm._data上，取值时不用通过vm._data.arr去取\n  for (let key in data) {\n    proxy(vm, '_data', key)\n  }\n  // 数据的劫持劫持方案 对象object.defineProperty\n  // 数组 单独处理的\n  observe(data)\n}\nfunction initComputed() { }\nfunction initWatch() { }","import Vue from \".\";\nimport { initState } from \"./state\";\n\n// 扩展初始化功能\nexport function initMixin(Vue) {\n  Vue.prototype._init = function (options) {\n    const vm = this;\n    vm.$options = options;\n\n    // 初始化状态 (将数据做一个初始化的劫持，当改变数据时，应该更新视图)\n    // vue组件中有很多状态 data props watch computed\n    initState(vm)\n\n\n    // vue核心：响应式数据原理\n    // MVVM：数据变化视图更新、视图变化影响数据(不能跳过数据更新视图)，$ref能实际直接操作dom\n  }\n}","import { initMixin } from './init'\n\n// 老写法，原型方法方便分割在不同的文件中\nfunction Vue(options) {\n  // console.log('index.js--->options', options)\n  this._init(options); // 入口方法，做初始化操作\n}\n\n// 扩展原型\ninitMixin(Vue)\n\n\n\nexport default Vue;\n\n"],"names":["oldArrayProtoMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","args","result","apply","inserted","ob","__ob__","slice","observeArray","proxy","vm","data","key","defineProperty","get","set","newValue","target","value","enumerable","configurable","Observer","isArray","__proto__","walk","item","observe","keys","defineReactive","console","log","initState","opts","$options","props","initData","computed","watch","_data","call","initMixin","Vue","_init","options"],"mappings":"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"}