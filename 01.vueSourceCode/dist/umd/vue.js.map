{"version":3,"file":"vue.js","sources":["../../src/observer/array.js","../../src/util.js","../../src/observer/index.js","../../src/state.js","../../src/compiler/parse.js","../../src/compiler/generate.js","../../src/compiler/index.js","../../src/vdom/patch.js","../../src/lifecycle.js","../../src/init.js","../../src/vdom/index.js","../../src/index.js"],"sourcesContent":["import { observe } from \".\";\n\n// 重写数组的方法, 拿到数组原型上的方法(原来的方法)\nlet oldArrayProtoMethods = Array.prototype;\n\n// 继承一下  arrayMethods.__proto__ = oldArrayProtoMethods\nexport let arrayMethods = Object.create(oldArrayProtoMethods);\n\n// 7个改变数组本身状态的方法\nlet methods = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'reverse',\n  'sort',\n  'splice'\n]\n\nmethods.forEach(method => {\n  arrayMethods[method] = function (...args) {\n    // 调用原来的方法\n    const result = oldArrayProtoMethods[method].apply(this, args) // this就是observe里的value\n    let inserted;\n    let ob = this.__ob__;\n    switch (method) {\n      // method中有新增元素的方法，要观测新增的元素，新增的是对象类型，应该再次被劫持\n      case 'push':\n      case 'unshift':  // 这俩个方法都是追加\n        inserted = args;\n        break;\n      case 'splice': // vue.$set的原理\n        // 删除、添加、修改的功能都有，第3个参数才是新增的值\n        inserted = args.slice(2); // arr.splice(0, 1, {a:1}) // 从第0个索引开始删除一个，新增一个对象\n      default:\n        break;\n    }\n    if (inserted) {\n      // 通过ob 把新增的对象也进行代理\n      ob.observeArray(inserted); // 给数组新增的值也要进行观测\n    }\n    return result\n  }\n})","export function proxy(vm, data, key) {\n  Object.defineProperty(vm, key, {\n    get() {\n      return vm[data][key]; // vm._data.a\n    },\n    set(newValue) { // vm.a = 100\n      vm[data][key] = newValue // vm._data.a = 100\n    }\n  })\n}\n\nexport function defineProperty(target, key, value) {\n  Object.defineProperty(target, key, {\n    enumerable: false, // 将此属性定义成不可枚举的,this.walk的时候，不会取到此属性\n    configurable: false, // 此属性不可编辑\n    value: value\n    // 会不停的调用defineReactive，将__ob__变成响应式的，this上有__ob__，会无限递归\n    // value.__ob__ = this //this是Observer实例， 自定义属性递归过程中，回去再去递归它的属性，会无限递归，不呢个这样写\n  })\n}","import { arrayMethods } from \"./array\";\nimport { defineProperty } from \"../util.js\";\nclass Observer {\n  constructor(value) {\n    // 使用defineProperty 重新定义属性,\n    // 判断一个对象是否被观测过，看他有没有 __ob__这个属性(Observer的实例)，__ob__自定义属性，用来描述对象被观测过了\n    // 让其他地方能拿到实例的方法\n    defineProperty(value, '__ob__', this)\n\n\n    if (Array.isArray(value)) {\n      // 判断值是不是数组，希望调用 push shift unshift splice sort reverse pop\n      // 函数劫持、切片编程\n      value.__proto__ = arrayMethods\n      // 观测数组中的对象类型,对象变化也要做一些事\n      this.observeArray(value)\n    } else {\n      this.walk(value)\n    }\n  }\n  // 观测数组中的每一项\n  observeArray(value) {\n    value.forEach(item => {\n      observe(item); // 观测数组中的对象类型\n    })\n  }\n  // 观测对象上的每一项\n  walk(data) {\n    // 循环对象使用defineProperty进行定义\n    let keys = Object.keys(data); // 获取对象的key\n    keys.forEach(key => {\n      // console.log('walk--data', data, 'key', key)\n      defineReactive(data, key, data[key]); // Vue.util.defineReactive: 将数据定义成响应式的数据\n    })\n\n  }\n}\n// 封装 继承\n// observe(newValue) => value=newValue ==> value=observve(newValue)\nfunction defineReactive(data, key, value) {\n  observe(value); // 如果观测的对象的值也是对象，再进行观测\n\n  Object.defineProperty(data, key, {\n    get() {\n      // console.log(\"用户获取值\", key, value)\n      return value\n    },\n    set(newValue) {\n      // console.log(\"用户设置值\", key, value)\n      if (newValue == value) return;\n      // data[key] = newValue; // 这样写会死循环，利用闭包就好了\n      observe(newValue); // 如果用户将值改为对象，继续监控\n      value = newValue\n    }\n  })\n  // console.log(\"defineReactive\", 'data', data, 'key', key)\n}\n\nexport function observe(data) {\n  // console.log('observe-data', data)\n  // 观测的数据不能不是对象，并且不是null\n  if (typeof data !== 'object' || data === null) {\n    return data;\n  }\n  if (data.__ob__) {\n    // 对象上有__ob__属性，已经被观测过了\n    return data;\n  }\n  return new Observer(data)\n}","import { observe } from \"./observer/index\";\nimport { proxy } from \"./util.js\";\n// 响应式状态初始化\nexport function initState(vm) { // vm.$options\n  // console.log('state.js-->vm', vm)\n  const opts = vm.$options;\n  if (opts.props) {\n    initProps(vm)\n  }\n  if (opts.methods) {\n    initMethods(vm)\n  }\n  if (opts.data) {\n    initData(vm)\n  }\n  if (opts.computed) {\n    initComputed(vm)\n  }\n  if (opts.watch) {\n    initWatch(vm)\n  }\n}\n\nfunction initProps() { }\nfunction initMethods() { }\n\nfunction initData(vm) { // 数据的初始化操作\n  let data = vm.$options.data\n  // vm能达到观测后的data\n  vm._data = data = typeof data == 'function' ? data.call(vm) : data;\n  // console.log('initData--->', data)\n  // 当去vm上取属性时，将属性的取值代理到vm._data上，取值时不用通过vm._data.arr去取\n  for (let key in data) {\n    proxy(vm, '_data', key)\n  }\n  // 数据的劫持劫持方案 对象object.defineProperty\n  // 数组 单独处理的\n  observe(data)\n}\nfunction initComputed() { }\nfunction initWatch() { }","// src/core/util/lang.js\nconst unicodeRegExp = /a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD/\n\n// src/compiler/parser/html-parser.js\n// Regular Expressions for parsing tags and attributes\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/ // 匹配属性，aaa=\"aaa\" | aaa='aaa' | aaa=aaa\nconst dynamicArgAttribute = /^\\s*((?:v-[\\w-]+:|@|:|#)\\[[^=]+\\][^\\s\"'<>\\/=]*)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z${unicodeRegExp.source}]*` // 标签名: aaa-123aa\n// ?:匹配不捕获\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})` // 捕获标签 <my:xxx></my:xxx>\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) // 标签开头的正则 捕获内容是标签名，开始标签部分，不包含开始标签的结尾。如 <div class=\"className\" ></div>，匹配的是 '<div class=\"className\"'\nconst startTagClose = /^\\s*(\\/?)>/ // 匹配 > 标签 或者/> <div> <br/> 开始标签的结尾部分。如 <div class=\"className\" ></div>，匹配的是 ' >'\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) // '</div><p></p>' 匹配结果为 </div>\nconst doctype = /^<!DOCTYPE [^>]+>/i // 匹配 DOCTYPE\nconst comment = /^<!\\--/ // 匹配注释\nconst conditionalComment = /^<!\\[/ // 匹配条件注释\nconst defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g // 匹配双大括号 {{  }}\nconst forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/\n\n\nexport function parseHTML(html) {\n\n  // 数据结构树 树、栈\n  function createASTElement(tagName, attrs) {\n    return {\n      tag: tagName, // 标签名\n      type: 1, // 元素类型\n      children: [], // 孩子列表\n      attrs, // 属性列表\n      parent: null // 父元素\n    }\n  }\n  let root; // 根节点\n  let currentParent; // 当前节点\n  let stack = [] // 存储标签的栈，用来判断栈是否符合预期\n  // 解析开始标签,并校验标签是否符合预期 <div><span></span></div> [div, span]\n  function start(tagName, attrs) {\n    // console.log('开始标签', 'tagName', tagName, 'attrs', attrs)\n    let element = createASTElement(tagName, attrs)\n    if (!root) {\n      root = element;\n    }\n    currentParent = element; // 当前解析的标签 保存起来\n    stack.push(element) // 将生成的ast元素放到栈中\n  }\n  // 解析结束标签(标签闭合的时候，才确定父子关系)\n  function end(tagName,) {\n    // console.log('结束标签-tagName', tagName)\n    // 在结尾标签处创建父子关系\n    let element = stack.pop(); // 取出栈中的最后一个\n    // <div><p></p> hello </div> [div, p] currentParent=p, 取出p后，currentParent就是div\n    currentParent = stack[stack.length - 1]\n    if (currentParent) {\n      // 在闭合时，取出标签，可以知道取出这个标签的父亲是谁\n      element.parent = currentParent\n      currentParent.children.push(element)\n    }\n\n\n  }\n\n  // 解析文本\n  function chars(text) {\n    // console.log('解析文本-text', text, \"currentParent\", currentParent)\n    text = text.replace(/\\s/g, '') // 去空格\n    if (text) {\n      currentParent.children.push({\n        type: 3, // 文本类型用3\n        text: text\n      })\n    }\n  }\n\n  while (html) { // 只要html不为空字符串，就一直解析\n    let textEnd = html.indexOf('<')\n    // 匹配到了标签的 \"<\"\n    if (textEnd == 0) { // v-bind v-on <!DOCTYPE <!---->  <br/> \n      //  肯定是标签\n      const startTagMatch = parseStartTag(); // 开始标签匹配的结果\n      if (startTagMatch) {\n        // 处理开始标签\n        start(startTagMatch.tagName, startTagMatch.attrs)\n      }\n      // console.log(\"匹配掉一个开始标签之后---html\", html)\n\n      const endTagMatch = html.match(endTag)\n      if (endTagMatch) {\n        // 处理结束标签\n        advance(endTagMatch[0].length)\n        end(endTagMatch[1]) // 将结束标签传入\n        continue;\n      }\n      // break;\n    }\n\n    let text = 0\n    if (textEnd >= 0) {\n      // 处理文本\n      text = html.substring(0, textEnd)\n    }\n    if (text) {\n      // 处理文本\n      advance(text.length)\n      chars(text);\n      // console.log('html--->text', html)\n    }\n    // break;\n\n\n  }\n\n  // 将匹配过的字符串进行截取操作，再进行更新html\n  function advance(n) {\n    html = html.substring(n)\n  }\n  // 解析标签\n  function parseStartTag() {\n    const start = html.match(startTagOpen)\n    if (start) {\n      // console.log(html, '匹配到的开始标签', start)\n      const match = {\n        tagName: start[1],\n        attrs: []\n      }\n      // console.log(\"match\", match)\n      advance(start[0].length);// 已经进行过匹配到的开始标签，删除掉\n      // console.log('删除后的html', html)\n      // 如果是闭合标签，说明没有属性\n      let end;\n      let attr;\n      // 不是单标签，且能匹配到属性\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        // console.log('attr--->', attr)\n        match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] })\n        advance(attr[0].length) // 去掉当前已经匹配掉的属性\n        // console.log('match.attrs', match.attrs)\n        // break;\n      }\n      // console.log('匹配的结束标签结尾---end', end)\n      if (end) { // >\n        // console.log('匹配的结束标签结尾---end', end)\n        advance(end[0].length)\n        return match\n      }\n    }\n  }\n\n  return root\n}","// 编写: <div id=\"app\" style=\"color: red\"> hello {{name}} <span>hello</span></div>\n// 结果: render(){ return _c('div', {id: 'app', style:{color: 'red'}}), _v('hello'+_s(name)), _c('span', null, _v('hello'))}\n\nconst defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g // 匹配双大括号 {{  }}\n\n\n// 语法层面的转义\n// 将属性转换成key：value的形式\nfunction genProps(attrs) { // id=\"app\" / style=\"color:'red';fontSize:12px\"\n  console.log('attrs--->', attrs)\n  let str = ''\n  for (let i = 0; i < attrs.length; i++) {\n    let attr = attrs[i]\n    if (attr.name === \"style\") {\n      let obj = {} // 对style上的样式进行特殊处理\n      attr.value.split(';').forEach(item => {\n        let [key, value] = item.split(':')\n        obj[key] = value\n      })\n      attr.value = obj\n    }\n    str += `${attr.name}:${JSON.stringify(attr.value)},`;\n\n  }\n\n  // 上面拼key-value的时候，会多出一个逗号\n  return `{${str.slice(0, -1)}}`;\n}\n\nfunction gen(node) {\n  // 节点可能是文本，可能是标签\n  if (node.type == 1) {\n    return generate(node) // 生成元素节点的字符串\n  } else {\n    // 如果是文本， 将当前节点的文本拿出来\n    let text = node.text // 获取文本\n    // 如果是普通文本，不带{{}}\n    if (!defaultTagRE.test(text)) {\n      // 1._v('hello') => _v('hello')\n      return `_v(${JSON.stringify(text)})`// 每次循环匹配代码之前，都要将正则的lastIndex置为0\n    }\n    // 2._v('hello {{name}} world {{msg}} aa') => _v('hello' + _s(name) + 'world' + _s(msg))\n    let tokens = []; // 存放每一段的代码\n    let lastIndex = defaultTagRE.lastIndex = 0; // 如果正则是全局模式 需要每次前置为0\n    let match, index; // 每次匹配到的结果\n\n    // 捕获 “{{name}}”\n    while (match = defaultTagRE.exec(text)) {\n      index = match.index // 保存匹配到的索引\n      if (index > lastIndex) {\n        // 当前是普通文班\n        tokens.push(JSON.stringify(text.slice(lastIndex, index)))\n      }\n      // 当前是'{{name}}',放入捕获到的变量名\n      tokens.push(`_s(${match[1].trim()})`)\n      lastIndex = index + match[0].length\n    }\n    if (lastIndex < text.length) {\n      tokens.push(JSON.stringify(text.slice(lastIndex))) // 示例最后的\"aa\"\n    }\n    return `_v(${tokens.join('+')})` // 2._v('hello {{name}} world {{msg}} aa') => _v('hello' + _s(name) + 'world' + _s(msg))\n  }\n}\n// 根据当前元素的儿子生成孩子\nfunction getChildren(el) {\n  const children = el.children // 儿子的生成\n  if (children) {\n    // 将所有转化后的儿子，用逗号拼接起来\n    return children.map(child => gen(child)).join(',')\n  }\n}\n\nexport function generate(el) {\n  let children = getChildren(el);\n  // 创建标签和标签的属性，将儿子拼到后面\n  let code = `_c('${el.tag}', ${\n    el.attrs.length ? `${genProps(el.attrs)}` : 'undefined'\n    }${\n    children ? `,${children}` : ''\n    })`;\n\n\n\n  return code\n}","// <div>hello {{name}} <span>world</span></div>\n// let html = {\n//   tag: 'div',\n//   parent: null,\n//   type: 1,\n//   attrs: [],\n//   children: [\n//     { tag: null, parent: '父div', attrs: [], text: 'hello {{name}}' },\n//     { tag: 'span', parent: '父div', attrs: [], text: 'world' },\n//   ]\n// }\nimport { parseHTML } from \"./parse\";\nimport { generate } from \"./generate\";\n\n// 解析html，重新生成代码，生成render函数\nexport function compileToFunctions(template) {\n  // 将html模板 ==》 render函数\n  // ast语法树：用一颗树描述html结构，再把这样一个结构转换成js语法，最后生成对应的代码字符串 \n  // 虚拟dom和ast：一个对语法转义，一个对结构转义，ast可以描述css、js、dom，虚拟dom只能描述dom结构\n  // 虚拟dom 是用对象来描述节点，避免操作真实dom，来比对的； ast是描述代码的，描述语言本身,只描述语法：const a = 1; ==> {indentifier: const, name: a, value: 1}\n  // <div id=\"a\"></div> ===> {attrs:[{id:'a'}], tag:'div', children:[]}\n\n  // 1.需要将html代码转化成\"ast\"语法树 可以用ast树来描述语言本身，\n\n  // 前端必须要掌握的数据结构（树）\n  // 测试 render 函数的节点\n  template = `<div id=\"app\" style=\"color: red\"> hello {{name}} {{msg}} <span>hello</span></div>`\n  let ast = parseHTML(template)\n  // console.log('compileToFunctions', 'template', template, 'ast', ast)\n\n  // 2.优化静态节点\n\n  // 3.通过这颗树 重新生成代码\n  // <div id=\"app\" style=\"color: red\"> hello {{name}} <span>hello</span></div>\n  // render(){ return _c('div', {id: 'app', style:{color: 'red'}}), _v('hello'+_s(name)), _c('span', null, _v('hello'))}\n  let code = generate(ast)\n  // console.log('generate-->code', code)\n\n  // 4.将字符串变成函数 限制取值范围 通过with来进行取值 稍后调用render函数就可以通过改变this 让这个函数内部取到结果\n  let render = new Function(`with(this){return ${code}}`)\n  // let obj = { a: 1, b: 2 }\n  // with (obj) { console.log(a, b) }\n  // console.log('render-->', render)\n\n  return render\n\n}","// 将虚拟节点转换成真实节点\nexport function patch(oldVnode, vnode) {\n  console.log('oldVnode', oldVnode, 'vnode', vnode)\n\n  let el = createElm(vnode); // 根据当前虚拟节点创建真实dom\n  let parentElm = oldVnode.parentNode // 获取老的app的父亲 =》 body\n  parentElm.insertBefore(el, oldVnode.nextSibling) // 当前的真实元素插入到app的后面\n  parentElm.removeChild(oldVnode) // 删除老节点\n}\n\n\n\nfunction createElm(vnode) {\n  let { tag, children, key, data, text } = vnode\n  if (typeof tag == 'string') { // 创建元素 放到vnode.el上\n    // 如果有标签说明是一个元素\n    vnode.el = document.createElement(tag);\n    // 遍历儿子，将儿子渲染后的结果扔到父亲中\n    children.forEach(child => {\n      vnode.el.appendChild(createElm(child))\n    })\n  } else { // 创建文本 放到vnode.el 上\n    vnode.el = document.createTextNode(text)\n  }\n  return vnode.el\n}\n\n// vue的渲染流程 =》 先初始化数据 =》将模板逆行编译 =》 render函数 =》 生成虚拟节点 =》 生成真实dom =》 更新到页面","import { patch } from \"./vdom/patch\";\n\nexport function lifecycleMixin(Vue) {\n  Vue.prototype._update = function (vnode) {\n    console.log('lifecycle---_update', vnode)\n    const vm = this\n    patch(vm.$el, vnode)\n  }\n}\n\n\nexport function mountComponent(vm, el) {\n  // 调用render方法去渲染 el属性\n\n  // 先调用render方法创建虚拟节点，再将虚拟节点渲染到页面上\n  vm._update(vm._render());\n}","import Vue from \".\";\nimport { initState } from \"./state\";\nimport { compileToFunctions } from \"./compiler/index\";\nimport { mountComponent } from \"./lifecycle\";\n\n// 扩展初始化功能\nexport function initMixin(Vue) {\n  Vue.prototype._init = function (options) {\n    const vm = this;\n    vm.$options = options;\n    // 1.数据观测初始化(vue源码会先初始化事件和生命周期)\n    // 初始化状态 (将数据做一个初始化的劫持，当改变数据时，应该更新视图)\n    // vue组件中有很多状态 data props watch computed\n    initState(vm)\n    // vue核心：响应式数据原理\n    // MVVM：数据变化视图更新、视图变化影响数据(不能跳过数据更新视图)，$ref能实际直接操作dom\n\n    // 2. ast树解析\n    // 如果当前有el属性说明要渲染模板(el属性，等价于vm.$mount方法)\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el)\n    }\n  }\n  Vue.prototype.$mount = function (el) {\n    // 挂载操作\n    const vm = this;\n    const options = vm.$options\n    el = document.querySelector(el)\n    vm.$el = el\n\n    // debugger\n    if (!options.render) {\n      // 没render 将template转化成render方法, render方法优先级比template更高\n      let template = options.template\n      if (!template && el) {\n        template = el.outerHTML\n      }\n      // 有el、有template才做编译的操作，将模板转换成为render函数\n      // 编译原理 将模板编译成render函数\n      const render = compileToFunctions(template)\n      options.render = render\n    }\n    // 最终渲染时都是options.render方法\n    console.log('最终渲染时都是options.render方法', options.render)\n    // 需要挂载这个组件\n    mountComponent(vm, el)\n    console.log('el', el)\n  }\n}","export function renderMixin(Vue) { // 创建虚拟dom，用对象来描述dom的解构\n  Vue.prototype._c = function () { // 创建虚拟dom元素\n    return createElement(...arguments);\n  }\n  Vue.prototype._s = function (val) { // stringify\n    return val == null ? '' : (typeof val == 'object') ? JSON.stringify(val) : val;\n  }\n  Vue.prototype._v = function (text) { // 创建虚拟dom文本元素\n    return createTextVnode(text)\n  }\n  Vue.prototype._render = function () { // _render = render\n    const vm = this\n    const render = vm.$options.render\n    let vnode = render.call(vm)\n    console.log('vdom/index/_render--vnode', vnode)\n    return vnode;\n  }\n}\n\n// _c('div', {}, 1,2,3)\nfunction createElement(tag, data = {}, ...children) {\n  console.log('createElement-arguments', arguments)\n  return vnode(tag, data, data.key, children)\n\n}\nfunction createTextVnode(text) {\n  console.log('createTextVnode-arguments', arguments)\n  return vnode(undefined, undefined, undefined, undefined, text)\n}\n\n// 用来产生虚拟dom的,ast是根据原代码转换出来的，不会有一些不存在的属性，虚拟dom可以加一些自定义属性\nfunction vnode(tag, data, key, children, text) {\n  return {\n    tag,\n    data,\n    key,\n    children,\n    text,\n    componentsInstance: '',\n    slot: ''\n  }\n}","import { initMixin } from './init'\nimport { lifecycleMixin } from \"./lifecycle\";\nimport { renderMixin } from \"./vdom/index\";\n// 老写法，原型方法方便分割在不同的文件中\nfunction Vue(options) {\n  // console.log('index.js--->options', options)\n  this._init(options); // 入口方法，做初始化操作\n}\n\n// 扩展原型\ninitMixin(Vue)\nlifecycleMixin(Vue) // 混合生命周期 渲染\nrenderMixin(Vue)\n\nexport default Vue;\n\n"],"names":["oldArrayProtoMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","args","result","apply","inserted","ob","__ob__","slice","observeArray","proxy","vm","data","key","defineProperty","get","set","newValue","target","value","enumerable","configurable","Observer","isArray","__proto__","walk","item","observe","keys","defineReactive","initState","opts","$options","props","initData","computed","watch","_data","call","unicodeRegExp","attribute","ncname","source","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","parseHTML","html","createASTElement","tagName","attrs","tag","type","children","parent","root","currentParent","stack","start","element","push","end","pop","length","chars","text","replace","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genProps","console","log","str","i","obj","split","JSON","stringify","gen","node","generate","test","tokens","lastIndex","index","exec","trim","join","getChildren","el","map","child","code","compileToFunctions","template","ast","render","Function","patch","oldVnode","vnode","createElm","parentElm","parentNode","insertBefore","nextSibling","removeChild","document","createElement","appendChild","createTextNode","lifecycleMixin","Vue","_update","$el","mountComponent","_render","initMixin","_init","options","$mount","querySelector","outerHTML","renderMixin","_c","arguments","_s","val","_v","createTextVnode","undefined","componentsInstance","slot"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAGA,IAAIA,oBAAoB,GAAGC,KAAK,CAACC,SAAjC;;EAGO,IAAIC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAcL,oBAAd,CAAnB;;EAGP,IAAIM,OAAO,GAAG,CACZ,MADY,EAEZ,KAFY,EAGZ,OAHY,EAIZ,SAJY,EAKZ,SALY,EAMZ,MANY,EAOZ,QAPY,CAAd;EAUAA,OAAO,CAACC,OAAR,CAAgB,UAAAC,MAAM,EAAI;EACxBL,EAAAA,YAAY,CAACK,MAAD,CAAZ,GAAuB,YAAmB;EAAA,sCAANC,IAAM;EAANA,MAAAA,IAAM;EAAA;;EACxC;EACA,QAAMC,MAAM,GAAGV,oBAAoB,CAACQ,MAAD,CAApB,CAA6BG,KAA7B,CAAmC,IAAnC,EAAyCF,IAAzC,CAAf,CAFwC;;EAGxC,QAAIG,QAAJ;EACA,QAAIC,EAAE,GAAG,KAAKC,MAAd;;EACA,YAAQN,MAAR;EACE;EACA,WAAK,MAAL;EACA,WAAK,SAAL;EAAiB;EACfI,QAAAA,QAAQ,GAAGH,IAAX;EACA;;EACF,WAAK,QAAL;EAAe;EACb;EACAG,QAAAA,QAAQ,GAAGH,IAAI,CAACM,KAAL,CAAW,CAAX,CAAX;EARJ;;EAYA,QAAIH,QAAJ,EAAc;EACZ;EACAC,MAAAA,EAAE,CAACG,YAAH,CAAgBJ,QAAhB,EAFY;EAGb;;EACD,WAAOF,MAAP;EACD,GAtBD;EAuBD,CAxBD;;ECnBO,SAASO,KAAT,CAAeC,EAAf,EAAmBC,IAAnB,EAAyBC,GAAzB,EAA8B;EACnChB,EAAAA,MAAM,CAACiB,cAAP,CAAsBH,EAAtB,EAA0BE,GAA1B,EAA+B;EAC7BE,IAAAA,GAD6B,iBACvB;EACJ,aAAOJ,EAAE,CAACC,IAAD,CAAF,CAASC,GAAT,CAAP,CADI;EAEL,KAH4B;EAI7BG,IAAAA,GAJ6B,eAIzBC,QAJyB,EAIf;EAAE;EACdN,MAAAA,EAAE,CAACC,IAAD,CAAF,CAASC,GAAT,IAAgBI,QAAhB,CADY;EAEb;EAN4B,GAA/B;EAQD;EAEM,SAASH,cAAT,CAAwBI,MAAxB,EAAgCL,GAAhC,EAAqCM,KAArC,EAA4C;EACjDtB,EAAAA,MAAM,CAACiB,cAAP,CAAsBI,MAAtB,EAA8BL,GAA9B,EAAmC;EACjCO,IAAAA,UAAU,EAAE,KADqB;EACd;EACnBC,IAAAA,YAAY,EAAE,KAFmB;EAEZ;EACrBF,IAAAA,KAAK,EAAEA,KAH0B;EAKjC;;EALiC,GAAnC;EAOD;;MCjBKG;EACJ,oBAAYH,KAAZ,EAAmB;EAAA;;EACjB;EACA;EACA;EACAL,IAAAA,cAAc,CAACK,KAAD,EAAQ,QAAR,EAAkB,IAAlB,CAAd;;EAGA,QAAIzB,KAAK,CAAC6B,OAAN,CAAcJ,KAAd,CAAJ,EAA0B;EACxB;EACA;EACAA,MAAAA,KAAK,CAACK,SAAN,GAAkB5B,YAAlB,CAHwB;;EAKxB,WAAKa,YAAL,CAAkBU,KAAlB;EACD,KAND,MAMO;EACL,WAAKM,IAAL,CAAUN,KAAV;EACD;EACF;;;;;mCAEYA,OAAO;EAClBA,MAAAA,KAAK,CAACnB,OAAN,CAAc,UAAA0B,IAAI,EAAI;EACpBC,QAAAA,OAAO,CAACD,IAAD,CAAP,CADoB;EAErB,OAFD;EAGD;;;;2BAEId,MAAM;EACT;EACA,UAAIgB,IAAI,GAAG/B,MAAM,CAAC+B,IAAP,CAAYhB,IAAZ,CAAX,CAFS;;EAGTgB,MAAAA,IAAI,CAAC5B,OAAL,CAAa,UAAAa,GAAG,EAAI;EAClB;EACAgB,QAAAA,cAAc,CAACjB,IAAD,EAAOC,GAAP,EAAYD,IAAI,CAACC,GAAD,CAAhB,CAAd,CAFkB;EAGnB,OAHD;EAKD;;;;;EAGH;;;EACA,SAASgB,cAAT,CAAwBjB,IAAxB,EAA8BC,GAA9B,EAAmCM,KAAnC,EAA0C;EACxCQ,EAAAA,OAAO,CAACR,KAAD,CAAP,CADwC;;EAGxCtB,EAAAA,MAAM,CAACiB,cAAP,CAAsBF,IAAtB,EAA4BC,GAA5B,EAAiC;EAC/BE,IAAAA,GAD+B,iBACzB;EACJ;EACA,aAAOI,KAAP;EACD,KAJ8B;EAK/BH,IAAAA,GAL+B,eAK3BC,QAL2B,EAKjB;EACZ;EACA,UAAIA,QAAQ,IAAIE,KAAhB,EAAuB,OAFX;;EAIZQ,MAAAA,OAAO,CAACV,QAAD,CAAP,CAJY;;EAKZE,MAAAA,KAAK,GAAGF,QAAR;EACD;EAX8B,GAAjC,EAHwC;EAiBzC;;EAEM,SAASU,OAAT,CAAiBf,IAAjB,EAAuB;EAC5B;EACA;EACA,MAAI,QAAOA,IAAP,MAAgB,QAAhB,IAA4BA,IAAI,KAAK,IAAzC,EAA+C;EAC7C,WAAOA,IAAP;EACD;;EACD,MAAIA,IAAI,CAACL,MAAT,EAAiB;EACf;EACA,WAAOK,IAAP;EACD;;EACD,SAAO,IAAIU,QAAJ,CAAaV,IAAb,CAAP;EACD;;EClEM,SAASkB,SAAT,CAAmBnB,EAAnB,EAAuB;EAAE;EAC9B;EACA,MAAMoB,IAAI,GAAGpB,EAAE,CAACqB,QAAhB;;EACA,MAAID,IAAI,CAACE,KAAT,EAAgB;;EAGhB,MAAIF,IAAI,CAAChC,OAAT,EAAkB;;EAGlB,MAAIgC,IAAI,CAACnB,IAAT,EAAe;EACbsB,IAAAA,QAAQ,CAACvB,EAAD,CAAR;EACD;;EACD,MAAIoB,IAAI,CAACI,QAAT,EAAmB;;EAGnB,MAAIJ,IAAI,CAACK,KAAT,EAAgB;EAGjB;;EAKD,SAASF,QAAT,CAAkBvB,EAAlB,EAAsB;EAAE;EACtB,MAAIC,IAAI,GAAGD,EAAE,CAACqB,QAAH,CAAYpB,IAAvB,CADoB;;EAGpBD,EAAAA,EAAE,CAAC0B,KAAH,GAAWzB,IAAI,GAAG,OAAOA,IAAP,IAAe,UAAf,GAA4BA,IAAI,CAAC0B,IAAL,CAAU3B,EAAV,CAA5B,GAA4CC,IAA9D,CAHoB;EAKpB;;EACA,OAAK,IAAIC,GAAT,IAAgBD,IAAhB,EAAsB;EACpBF,IAAAA,KAAK,CAACC,EAAD,EAAK,OAAL,EAAcE,GAAd,CAAL;EACD,GARmB;EAUpB;;;EACAc,EAAAA,OAAO,CAACf,IAAD,CAAP;EACD;;ECtCD;EACA,IAAM2B,aAAa,GAAG,6JAAtB;EAGA;;EACA,IAAMC,SAAS,GAAG,2EAAlB;EAEA,IAAMC,MAAM,uCAAgCF,aAAa,CAACG,MAA9C,OAAZ;EACA;;EACA,IAAMC,YAAY,iBAAUF,MAAV,kBAAwBA,MAAxB,MAAlB;;EACA,IAAMG,YAAY,GAAG,IAAIC,MAAJ,aAAgBF,YAAhB,EAArB;;EACA,IAAMG,aAAa,GAAG,YAAtB;;EACA,IAAMC,MAAM,GAAG,IAAIF,MAAJ,gBAAmBF,YAAnB,YAAf;EAQO,SAASK,SAAT,CAAmBC,IAAnB,EAAyB;EAE9B;EACA,WAASC,gBAAT,CAA0BC,OAA1B,EAAmCC,KAAnC,EAA0C;EACxC,WAAO;EACLC,MAAAA,GAAG,EAAEF,OADA;EACS;EACdG,MAAAA,IAAI,EAAE,CAFD;EAEI;EACTC,MAAAA,QAAQ,EAAE,EAHL;EAGS;EACdH,MAAAA,KAAK,EAALA,KAJK;EAIE;EACPI,MAAAA,MAAM,EAAE,IALH;;EAAA,KAAP;EAOD;;EACD,MAAIC,IAAJ,CAZ8B;;EAa9B,MAAIC,aAAJ,CAb8B;;EAc9B,MAAIC,KAAK,GAAG,EAAZ,CAd8B;EAe9B;;EACA,WAASC,KAAT,CAAeT,OAAf,EAAwBC,KAAxB,EAA+B;EAC7B;EACA,QAAIS,OAAO,GAAGX,gBAAgB,CAACC,OAAD,EAAUC,KAAV,CAA9B;;EACA,QAAI,CAACK,IAAL,EAAW;EACTA,MAAAA,IAAI,GAAGI,OAAP;EACD;;EACDH,IAAAA,aAAa,GAAGG,OAAhB,CAN6B;;EAO7BF,IAAAA,KAAK,CAACG,IAAN,CAAWD,OAAX,EAP6B;EAQ9B,GAxB6B;;;EA0B9B,WAASE,GAAT,CAAaZ,OAAb,EAAuB;EACrB;EACA;EACA,QAAIU,OAAO,GAAGF,KAAK,CAACK,GAAN,EAAd,CAHqB;EAIrB;;EACAN,IAAAA,aAAa,GAAGC,KAAK,CAACA,KAAK,CAACM,MAAN,GAAe,CAAhB,CAArB;;EACA,QAAIP,aAAJ,EAAmB;EACjB;EACAG,MAAAA,OAAO,CAACL,MAAR,GAAiBE,aAAjB;EACAA,MAAAA,aAAa,CAACH,QAAd,CAAuBO,IAAvB,CAA4BD,OAA5B;EACD;EAGF,GAvC6B;;;EA0C9B,WAASK,KAAT,CAAeC,IAAf,EAAqB;EACnB;EACAA,IAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,KAAb,EAAoB,EAApB,CAAP,CAFmB;;EAGnB,QAAID,IAAJ,EAAU;EACRT,MAAAA,aAAa,CAACH,QAAd,CAAuBO,IAAvB,CAA4B;EAC1BR,QAAAA,IAAI,EAAE,CADoB;EACjB;EACTa,QAAAA,IAAI,EAAEA;EAFoB,OAA5B;EAID;EACF;;EAED,SAAOlB,IAAP,EAAa;EAAE;EACb,QAAIoB,OAAO,GAAGpB,IAAI,CAACqB,OAAL,CAAa,GAAb,CAAd,CADW;;EAGX,QAAID,OAAO,IAAI,CAAf,EAAkB;EAAE;EAClB;EACA,UAAME,aAAa,GAAGC,aAAa,EAAnC,CAFgB;;EAGhB,UAAID,aAAJ,EAAmB;EACjB;EACAX,QAAAA,KAAK,CAACW,aAAa,CAACpB,OAAf,EAAwBoB,aAAa,CAACnB,KAAtC,CAAL;EACD,OANe;;;EAShB,UAAMqB,WAAW,GAAGxB,IAAI,CAACyB,KAAL,CAAW3B,MAAX,CAApB;;EACA,UAAI0B,WAAJ,EAAiB;EACf;EACAE,QAAAA,OAAO,CAACF,WAAW,CAAC,CAAD,CAAX,CAAeR,MAAhB,CAAP;EACAF,QAAAA,GAAG,CAACU,WAAW,CAAC,CAAD,CAAZ,CAAH,CAHe;;EAIf;EACD,OAfe;;EAiBjB;;EAED,QAAIN,IAAI,GAAG,CAAX;;EACA,QAAIE,OAAO,IAAI,CAAf,EAAkB;EAChB;EACAF,MAAAA,IAAI,GAAGlB,IAAI,CAAC2B,SAAL,CAAe,CAAf,EAAkBP,OAAlB,CAAP;EACD;;EACD,QAAIF,IAAJ,EAAU;EACR;EACAQ,MAAAA,OAAO,CAACR,IAAI,CAACF,MAAN,CAAP;EACAC,MAAAA,KAAK,CAACC,IAAD,CAAL,CAHQ;EAKT,KAhCU;;EAoCZ,GAzF6B;;;EA4F9B,WAASQ,OAAT,CAAiBE,CAAjB,EAAoB;EAClB5B,IAAAA,IAAI,GAAGA,IAAI,CAAC2B,SAAL,CAAeC,CAAf,CAAP;EACD,GA9F6B;;;EAgG9B,WAASL,aAAT,GAAyB;EACvB,QAAMZ,KAAK,GAAGX,IAAI,CAACyB,KAAL,CAAW9B,YAAX,CAAd;;EACA,QAAIgB,KAAJ,EAAW;EACT;EACA,UAAMc,KAAK,GAAG;EACZvB,QAAAA,OAAO,EAAES,KAAK,CAAC,CAAD,CADF;EAEZR,QAAAA,KAAK,EAAE;EAFK,OAAd,CAFS;;EAOTuB,MAAAA,OAAO,CAACf,KAAK,CAAC,CAAD,CAAL,CAASK,MAAV,CAAP,CAPS;EAQT;EACA;;EACA,UAAIF,IAAJ;;EACA,UAAIe,IAAJ,CAXS;;EAaT,aAAO,EAAEf,IAAG,GAAGd,IAAI,CAACyB,KAAL,CAAW5B,aAAX,CAAR,MAAuCgC,IAAI,GAAG7B,IAAI,CAACyB,KAAL,CAAWlC,SAAX,CAA9C,CAAP,EAA6E;EAC3E;EACAkC,QAAAA,KAAK,CAACtB,KAAN,CAAYU,IAAZ,CAAiB;EAAEiB,UAAAA,IAAI,EAAED,IAAI,CAAC,CAAD,CAAZ;EAAiB3D,UAAAA,KAAK,EAAE2D,IAAI,CAAC,CAAD,CAAJ,IAAWA,IAAI,CAAC,CAAD,CAAf,IAAsBA,IAAI,CAAC,CAAD;EAAlD,SAAjB;EACAH,QAAAA,OAAO,CAACG,IAAI,CAAC,CAAD,CAAJ,CAAQb,MAAT,CAAP,CAH2E;EAI3E;EACA;EACD,OAnBQ;;;EAqBT,UAAIF,IAAJ,EAAS;EAAE;EACT;EACAY,QAAAA,OAAO,CAACZ,IAAG,CAAC,CAAD,CAAH,CAAOE,MAAR,CAAP;EACA,eAAOS,KAAP;EACD;EACF;EACF;;EAED,SAAOjB,IAAP;EACD;;ECpJD;EACA;EAEA,IAAMuB,YAAY,GAAG,uBAArB;EAGA;EACA;;EACA,SAASC,QAAT,CAAkB7B,KAAlB,EAAyB;EAAE;EACzB8B,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB/B,KAAzB;EACA,MAAIgC,GAAG,GAAG,EAAV;;EACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjC,KAAK,CAACa,MAA1B,EAAkCoB,CAAC,EAAnC,EAAuC;EACrC,QAAIP,IAAI,GAAG1B,KAAK,CAACiC,CAAD,CAAhB;;EACA,QAAIP,IAAI,CAACC,IAAL,KAAc,OAAlB,EAA2B;EAAA;EACzB,YAAIO,GAAG,GAAG,EAAV,CADyB;;EAEzBR,QAAAA,IAAI,CAAC3D,KAAL,CAAWoE,KAAX,CAAiB,GAAjB,EAAsBvF,OAAtB,CAA8B,UAAA0B,IAAI,EAAI;EAAA,4BACjBA,IAAI,CAAC6D,KAAL,CAAW,GAAX,CADiB;EAAA;EAAA,cAC/B1E,GAD+B;EAAA,cAC1BM,KAD0B;;EAEpCmE,UAAAA,GAAG,CAACzE,GAAD,CAAH,GAAWM,KAAX;EACD,SAHD;EAIA2D,QAAAA,IAAI,CAAC3D,KAAL,GAAamE,GAAb;EANyB;EAO1B;;EACDF,IAAAA,GAAG,cAAON,IAAI,CAACC,IAAZ,cAAoBS,IAAI,CAACC,SAAL,CAAeX,IAAI,CAAC3D,KAApB,CAApB,MAAH;EAED,GAfsB;;;EAkBvB,oBAAWiE,GAAG,CAAC5E,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,CAAX;EACD;;EAED,SAASkF,GAAT,CAAaC,IAAb,EAAmB;EACjB;EACA,MAAIA,IAAI,CAACrC,IAAL,IAAa,CAAjB,EAAoB;EAClB,WAAOsC,QAAQ,CAACD,IAAD,CAAf,CADkB;EAEnB,GAFD,MAEO;EACL;EACA,QAAIxB,IAAI,GAAGwB,IAAI,CAACxB,IAAhB,CAFK;EAGL;;EACA,QAAI,CAACa,YAAY,CAACa,IAAb,CAAkB1B,IAAlB,CAAL,EAA8B;EAC5B;EACA,0BAAaqB,IAAI,CAACC,SAAL,CAAetB,IAAf,CAAb,OAF4B;EAG7B,KAPI;;;EASL,QAAI2B,MAAM,GAAG,EAAb,CATK;;EAUL,QAAIC,SAAS,GAAGf,YAAY,CAACe,SAAb,GAAyB,CAAzC,CAVK;;EAWL,QAAIrB,KAAJ,EAAWsB,KAAX,CAXK;EAaL;;EACA,WAAOtB,KAAK,GAAGM,YAAY,CAACiB,IAAb,CAAkB9B,IAAlB,CAAf,EAAwC;EACtC6B,MAAAA,KAAK,GAAGtB,KAAK,CAACsB,KAAd,CADsC;;EAEtC,UAAIA,KAAK,GAAGD,SAAZ,EAAuB;EACrB;EACAD,QAAAA,MAAM,CAAChC,IAAP,CAAY0B,IAAI,CAACC,SAAL,CAAetB,IAAI,CAAC3D,KAAL,CAAWuF,SAAX,EAAsBC,KAAtB,CAAf,CAAZ;EACD,OALqC;;;EAOtCF,MAAAA,MAAM,CAAChC,IAAP,cAAkBY,KAAK,CAAC,CAAD,CAAL,CAASwB,IAAT,EAAlB;EACAH,MAAAA,SAAS,GAAGC,KAAK,GAAGtB,KAAK,CAAC,CAAD,CAAL,CAAST,MAA7B;EACD;;EACD,QAAI8B,SAAS,GAAG5B,IAAI,CAACF,MAArB,EAA6B;EAC3B6B,MAAAA,MAAM,CAAChC,IAAP,CAAY0B,IAAI,CAACC,SAAL,CAAetB,IAAI,CAAC3D,KAAL,CAAWuF,SAAX,CAAf,CAAZ,EAD2B;EAE5B;;EACD,wBAAaD,MAAM,CAACK,IAAP,CAAY,GAAZ,CAAb,OA3BK;EA4BN;EACF;;;EAED,SAASC,WAAT,CAAqBC,EAArB,EAAyB;EACvB,MAAM9C,QAAQ,GAAG8C,EAAE,CAAC9C,QAApB,CADuB;;EAEvB,MAAIA,QAAJ,EAAc;EACZ;EACA,WAAOA,QAAQ,CAAC+C,GAAT,CAAa,UAAAC,KAAK;EAAA,aAAIb,GAAG,CAACa,KAAD,CAAP;EAAA,KAAlB,EAAkCJ,IAAlC,CAAuC,GAAvC,CAAP;EACD;EACF;;EAEM,SAASP,QAAT,CAAkBS,EAAlB,EAAsB;EAC3B,MAAI9C,QAAQ,GAAG6C,WAAW,CAACC,EAAD,CAA1B,CAD2B;;EAG3B,MAAIG,IAAI,iBAAUH,EAAE,CAAChD,GAAb,gBACNgD,EAAE,CAACjD,KAAH,CAASa,MAAT,aAAqBgB,QAAQ,CAACoB,EAAE,CAACjD,KAAJ,CAA7B,IAA4C,WADtC,SAGNG,QAAQ,cAAOA,QAAP,IAAoB,EAHtB,MAAR;EAQA,SAAOiD,IAAP;EACD;;ECpFD;;EAeO,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;EAC3C;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACAA,EAAAA,QAAQ,0FAAR;EACA,MAAIC,GAAG,GAAG3D,SAAS,CAAC0D,QAAD,CAAnB,CAZ2C;EAe3C;EAEA;EACA;EACA;;EACA,MAAIF,IAAI,GAAGZ,QAAQ,CAACe,GAAD,CAAnB,CApB2C;EAuB3C;;EACA,MAAIC,MAAM,GAAG,IAAIC,QAAJ,6BAAkCL,IAAlC,OAAb,CAxB2C;EA0B3C;EACA;;EAEA,SAAOI,MAAP;EAED;;EC9CD;EACO,SAASE,KAAT,CAAeC,QAAf,EAAyBC,KAAzB,EAAgC;EACrC9B,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB4B,QAAxB,EAAkC,OAAlC,EAA2CC,KAA3C;EAEA,MAAIX,EAAE,GAAGY,SAAS,CAACD,KAAD,CAAlB,CAHqC;;EAIrC,MAAIE,SAAS,GAAGH,QAAQ,CAACI,UAAzB,CAJqC;;EAKrCD,EAAAA,SAAS,CAACE,YAAV,CAAuBf,EAAvB,EAA2BU,QAAQ,CAACM,WAApC,EALqC;;EAMrCH,EAAAA,SAAS,CAACI,WAAV,CAAsBP,QAAtB,EANqC;EAOtC;;EAID,SAASE,SAAT,CAAmBD,KAAnB,EAA0B;EAAA,MAClB3D,GADkB,GACiB2D,KADjB,CAClB3D,GADkB;EAAA,MACbE,QADa,GACiByD,KADjB,CACbzD,QADa;EAAA,MACH1C,GADG,GACiBmG,KADjB,CACHnG,GADG;EAAA,MACED,IADF,GACiBoG,KADjB,CACEpG,IADF;EAAA,MACQuD,IADR,GACiB6C,KADjB,CACQ7C,IADR;;EAExB,MAAI,OAAOd,GAAP,IAAc,QAAlB,EAA4B;EAAE;EAC5B;EACA2D,IAAAA,KAAK,CAACX,EAAN,GAAWkB,QAAQ,CAACC,aAAT,CAAuBnE,GAAvB,CAAX,CAF0B;;EAI1BE,IAAAA,QAAQ,CAACvD,OAAT,CAAiB,UAAAuG,KAAK,EAAI;EACxBS,MAAAA,KAAK,CAACX,EAAN,CAASoB,WAAT,CAAqBR,SAAS,CAACV,KAAD,CAA9B;EACD,KAFD;EAGD,GAPD,MAOO;EAAE;EACPS,IAAAA,KAAK,CAACX,EAAN,GAAWkB,QAAQ,CAACG,cAAT,CAAwBvD,IAAxB,CAAX;EACD;;EACD,SAAO6C,KAAK,CAACX,EAAb;EACD;;ECvBM,SAASsB,cAAT,CAAwBC,GAAxB,EAA6B;EAClCA,EAAAA,GAAG,CAACjI,SAAJ,CAAckI,OAAd,GAAwB,UAAUb,KAAV,EAAiB;EACvC9B,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC6B,KAAnC;EACA,QAAMrG,EAAE,GAAG,IAAX;EACAmG,IAAAA,KAAK,CAACnG,EAAE,CAACmH,GAAJ,EAASd,KAAT,CAAL;EACD,GAJD;EAKD;EAGM,SAASe,cAAT,CAAwBpH,EAAxB,EAA4B0F,EAA5B,EAAgC;EACrC;EAEA;EACA1F,EAAAA,EAAE,CAACkH,OAAH,CAAWlH,EAAE,CAACqH,OAAH,EAAX;EACD;;ECVM,SAASC,SAAT,CAAmBL,GAAnB,EAAwB;EAC7BA,EAAAA,GAAG,CAACjI,SAAJ,CAAcuI,KAAd,GAAsB,UAAUC,OAAV,EAAmB;EACvC,QAAMxH,EAAE,GAAG,IAAX;EACAA,IAAAA,EAAE,CAACqB,QAAH,GAAcmG,OAAd,CAFuC;EAIvC;EACA;;EACArG,IAAAA,SAAS,CAACnB,EAAD,CAAT,CANuC;EAQvC;EAEA;EACA;;EACA,QAAIA,EAAE,CAACqB,QAAH,CAAYqE,EAAhB,EAAoB;EAClB1F,MAAAA,EAAE,CAACyH,MAAH,CAAUzH,EAAE,CAACqB,QAAH,CAAYqE,EAAtB;EACD;EACF,GAfD;;EAgBAuB,EAAAA,GAAG,CAACjI,SAAJ,CAAcyI,MAAd,GAAuB,UAAU/B,EAAV,EAAc;EACnC;EACA,QAAM1F,EAAE,GAAG,IAAX;EACA,QAAMwH,OAAO,GAAGxH,EAAE,CAACqB,QAAnB;EACAqE,IAAAA,EAAE,GAAGkB,QAAQ,CAACc,aAAT,CAAuBhC,EAAvB,CAAL;EACA1F,IAAAA,EAAE,CAACmH,GAAH,GAASzB,EAAT,CALmC;;EAQnC,QAAI,CAAC8B,OAAO,CAACvB,MAAb,EAAqB;EACnB;EACA,UAAIF,QAAQ,GAAGyB,OAAO,CAACzB,QAAvB;;EACA,UAAI,CAACA,QAAD,IAAaL,EAAjB,EAAqB;EACnBK,QAAAA,QAAQ,GAAGL,EAAE,CAACiC,SAAd;EACD,OALkB;EAOnB;;;EACA,UAAM1B,MAAM,GAAGH,kBAAkB,CAACC,QAAD,CAAjC;EACAyB,MAAAA,OAAO,CAACvB,MAAR,GAAiBA,MAAjB;EACD,KAlBkC;;;EAoBnC1B,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCgD,OAAO,CAACvB,MAA/C,EApBmC;;EAsBnCmB,IAAAA,cAAc,CAACpH,EAAD,CAAd;EACAuE,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBkB,EAAlB;EACD,GAxBD;EAyBD;;EChDM,SAASkC,WAAT,CAAqBX,GAArB,EAA0B;EAAE;EACjCA,EAAAA,GAAG,CAACjI,SAAJ,CAAc6I,EAAd,GAAmB,YAAY;EAAE;EAC/B,WAAOhB,aAAa,MAAb,SAAiBiB,SAAjB,CAAP;EACD,GAFD;;EAGAb,EAAAA,GAAG,CAACjI,SAAJ,CAAc+I,EAAd,GAAmB,UAAUC,GAAV,EAAe;EAAE;EAClC,WAAOA,GAAG,IAAI,IAAP,GAAc,EAAd,GAAoB,QAAOA,GAAP,KAAc,QAAf,GAA2BnD,IAAI,CAACC,SAAL,CAAekD,GAAf,CAA3B,GAAiDA,GAA3E;EACD,GAFD;;EAGAf,EAAAA,GAAG,CAACjI,SAAJ,CAAciJ,EAAd,GAAmB,UAAUzE,IAAV,EAAgB;EAAE;EACnC,WAAO0E,eAAe,CAAC1E,IAAD,CAAtB;EACD,GAFD;;EAGAyD,EAAAA,GAAG,CAACjI,SAAJ,CAAcqI,OAAd,GAAwB,YAAY;EAAE;EACpC,QAAMrH,EAAE,GAAG,IAAX;EACA,QAAMiG,MAAM,GAAGjG,EAAE,CAACqB,QAAH,CAAY4E,MAA3B;EACA,QAAII,KAAK,GAAGJ,MAAM,CAACtE,IAAP,CAAY3B,EAAZ,CAAZ;EACAuE,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyC6B,KAAzC;EACA,WAAOA,KAAP;EACD,GAND;EAOD;;EAGD,SAASQ,aAAT,CAAuBnE,GAAvB,EAAoD;EAAA,MAAxBzC,IAAwB,uEAAjB,EAAiB;;EAAA,oCAAV2C,QAAU;EAAVA,IAAAA,QAAU;EAAA;;EAClD2B,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCsD,SAAvC;EACA,SAAOzB,KAAK,CAAC3D,GAAD,EAAMzC,IAAN,EAAYA,IAAI,CAACC,GAAjB,EAAsB0C,QAAtB,CAAZ;EAED;;EACD,SAASsF,eAAT,CAAyB1E,IAAzB,EAA+B;EAC7Be,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCsD,SAAzC;EACA,SAAOzB,KAAK,CAAC8B,SAAD,EAAYA,SAAZ,EAAuBA,SAAvB,EAAkCA,SAAlC,EAA6C3E,IAA7C,CAAZ;EACD;;;EAGD,SAAS6C,KAAT,CAAe3D,GAAf,EAAoBzC,IAApB,EAA0BC,GAA1B,EAA+B0C,QAA/B,EAAyCY,IAAzC,EAA+C;EAC7C,SAAO;EACLd,IAAAA,GAAG,EAAHA,GADK;EAELzC,IAAAA,IAAI,EAAJA,IAFK;EAGLC,IAAAA,GAAG,EAAHA,GAHK;EAIL0C,IAAAA,QAAQ,EAARA,QAJK;EAKLY,IAAAA,IAAI,EAAJA,IALK;EAML4E,IAAAA,kBAAkB,EAAE,EANf;EAOLC,IAAAA,IAAI,EAAE;EAPD,GAAP;EASD;;ECrCD,SAASpB,GAAT,CAAaO,OAAb,EAAsB;EACpB;EACA,OAAKD,KAAL,CAAWC,OAAX,EAFoB;;EAGrB;;;EAGDF,SAAS,CAACL,GAAD,CAAT;EACAD,cAAc,CAACC,GAAD,CAAd;;EACAW,WAAW,CAACX,GAAD,CAAX;;;;;;;;"}